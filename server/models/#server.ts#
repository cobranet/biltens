var MongoClient = require('mongodb').MongoClient;
var assert = require('assert');

export module Srv {
  export class ServerType {
    constructor(public name: String,
      public desc: String,
      public image: String
    ) {
    }
  };
  
  export class Server {
    
    constructor(
      public _id: String,
      public serverType: ServerType,
      public name: String,
      public description: String,
      public ip: String
        ) {
	}
    
  }
  
  export class ServerRepository {
    static mongo_url: String = 'mongodb://localhost:27017/biltens';
    dbConnection: any = null;
    
    public openDbConnection() {
      if (this.dbConnection === null) {
	MongoClient.connect(ServerRepository.mongo_url, (err, db) => {
	  assert.equal(null, err);
	  console.log(err);
	  console.log("Connected to mongo server");
	  console.log("db " + db);
	  this.dbConnection = db;
	});
      }
    }
    public closeDbConnection() {
      if (this.dbConnection !== null) {
	MongoClient.close();
      }
    }
    
    public insertServer(server: Server) {
      this.dbConnection.collection('servers').insertOne(server, (err: any, result: any) => {
	assert.equal(err, null);
	return result;
      });
    }
    public addServers() {
      var test = new ServerType("test", "Testni serveri svih vrsta", "blue.png");
      var prod = new ServerType("production", "Produkcioni server", "red.pnxg");
      var arr = [];
      arr.push(new Server(test, "TEST2", "Produkcija od prekljuƒçe", "102.10.21.11"));
      arr.push(new Server(prod, "PRODUKCIJA", "Produkcija", "102.10.212.111"));
      arr.push(new Server(test, "TEST1", "Testiranje kolaterala", "102.10.21.11"));
      arr.push(new Server(test, "TEST3", "Night bulid", "122.10.21.11"));
      var rep = new ServerRepository();
      return this.insertServer(arr[0]);
      
    }
    public findAllServers() {
      console.log("***************SSSSSSSSS***************");
      console.log(this.dbConnection.collection('servers'));
      console.log("*************SSSSSS*****************");
      var col:any = this.dbConnection.collection('servers');
      return col.find({});
    }

    }
}
